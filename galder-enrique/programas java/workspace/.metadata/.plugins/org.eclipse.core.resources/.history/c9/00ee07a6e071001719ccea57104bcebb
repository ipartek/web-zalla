/*
 * Created on 26-abr-2006
 *
 * TODO To change the template for this generated file go to
 * Window - Preferences - Java - Code Style - Code Templates
 */
package libreriavirtual.bd;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

import libreriavirtual.beans.Pedido;
import libreriavirtual.beans.Usuario;



/**
 * @author Administrador
 * 
 *         TODO To change the template for this generated type comment go to
 *         Window - Preferences - Java - Code Style - Code Templates
 */
public class BdOperaciones extends BdBase {

	/**
	 * 
	 */
	public BdOperaciones() {
		super();
		// TODO Auto-generated constructor stub
	}

	public boolean validarUsuario(String usuario, String clave) {
		boolean correcto = true;
		try {
			String sentenciaSql = "select usuario,clave from usuarios where" + " usuario='" + usuario
					+ "' and clave='" + clave + "'";
			System.out.println(sentenciaSql);
			Statement stmt = conexion.createStatement();
			ResultSet rs = stmt.executeQuery(sentenciaSql);
			correcto = rs.next();
			rs.close();
			stmt.close();
		} catch (Exception e) {
			e.printStackTrace();
			System.out.println("Validación de usuario no efectuada correctamente");
			correcto = false;
		}
		return correcto;
	}

	public List<Usuario> getUsuarios() {
		List<Usuario> usuarios = new ArrayList<Usuario>();
		try {
			String sentenciaSql = "select dni,nombre,primerApellido,segundoApellido,direccion,fechaNacimiento,email,usuario from usuarios";
			System.out.println(sentenciaSql);
			Statement stmt = conexion.createStatement();
			ResultSet rs = stmt.executeQuery(sentenciaSql);
			boolean hayMas = rs.next();
			Usuario usuario = null;
			while (hayMas) {
				usuario = new Usuario();
				usuario.setDni(rs.getString(1));
				usuario.setNombre(rs.getString(2));
				usuario.setPrimerApellido(rs.getString(3));
				usuario.setSegundoApellido(rs.getString(3));
				usuario.setDireccion(rs.getString(4));
				usuario.setFechaNacimiento(rs.getString(5));
				usuario.setEmail(rs.getString(6));
				usuario.setUsuario(rs.getString(7));
				usuarios.add(usuario);
				hayMas = rs.next();
			}
			rs.close();
			stmt.close();
		} catch (Exception e) {
			e.printStackTrace();
			System.out.println("Consulta de usuarios no efectuada correctamente");
		}
		return usuarios;
	}

	public List<Pedido> getPedidos(String dni) {
		List<Pedido> pedidos = new ArrayList<Pedido>();
		try {
			String sentenciaSql = "select dni,numPedido,detallePedido from pedidos where dni='" + dni + "'";
			System.out.println(sentenciaSql);
			Statement stmt = conexion.createStatement();
			ResultSet rs = stmt.executeQuery(sentenciaSql);
			boolean hayMas = rs.next();
			Pedido pedido = null;
			while (hayMas) {
				pedido = new Pedido();
				pedido.setDni(rs.getString(1));
				pedido.setNumPedido(rs.getInt(2));
				pedido.setDetallePedido(rs.getString(3));
				pedidos.add(pedido);
				hayMas = rs.next();
			}
			rs.close();
			stmt.close();
		} catch (Exception e) {
			e.printStackTrace();
			System.out.println("Consulta de pedidos no efectuada correctamente");
		}
		return pedidos;
	}

	public List<Pedido> getPedidos() {
		List<Pedido> pedidos = new ArrayList<Pedido>();
		try {
			String sentenciaSql = "select dni,numPedido,detallePedido from pedidos";
			System.out.println(sentenciaSql);
			Statement stmt = conexion.createStatement();
			ResultSet rs = stmt.executeQuery(sentenciaSql);
			boolean hayMas = rs.next();
			Pedido pedido = null;
			while (hayMas) {
				pedido = new Pedido();
				pedido.setDni(rs.getString(1));
				pedido.setNumPedido(rs.getInt(2));
				pedido.setDetallePedido(rs.getString(3));
				pedidos.add(pedido);
				hayMas = rs.next();
			}
			rs.close();
			stmt.close();
		} catch (Exception e) {
			e.printStackTrace();
			System.out.println("Consulta de pedidos no efectuada correctamente");
		}
		return pedidos;
	}

	public Usuario getUsuario(String dni) {
		Usuario usuario = null;
		try {
			String sentenciaSql = "select dni,nombre,primerApellido,segundoApellido,direccion,fechaNacimiento,email,usuario from usuarios"
					+ "where dni='" + dni + "'";
			System.out.println(sentenciaSql);
			Statement stmt = conexion.createStatement();
			ResultSet rs = stmt.executeQuery(sentenciaSql);
			boolean hayMas = rs.next();
			if (hayMas) {
				usuario = new Usuario();
				usuario.setDni(rs.getString(1));
				usuario.setNombre(rs.getString(2));
				usuario.setPrimerApellido(rs.getString(3));
				usuario.setSegundoApellido(rs.getString(4));
				usuario.setFechaNacimiento(rs.getString(5));
				usuario.setEmail(rs.getString(6));
				usuario.setUsuario(rs.getString(7));
				hayMas = rs.next();
			}
			rs.close();
			stmt.close();
		} catch (Exception e) {
			e.printStackTrace();
			System.out.println("Consulta de usuarios no efectuada correctamente");
		}
		return usuario;
	}

	public Pedido getPedido(String dni) {
		Pedido pedido = null;
		try {
			String sentenciaSql = "select dni,numPedido,detallePedido from pedidos " + "where dni='" + dni + "'";
			System.out.println(sentenciaSql);
			Statement stmt = conexion.createStatement();
			ResultSet rs = stmt.executeQuery(sentenciaSql);
			boolean hayMas = rs.next();
			if (hayMas) {
				pedido = new Pedido();
				pedido.setDni(rs.getString(1));
				pedido.setNumPedido(rs.getInt(2));
				pedido.setDetallePedido(rs.getString(3));

				hayMas = rs.next();
			}
			rs.close();
			stmt.close();
		} catch (Exception e) {
			e.printStackTrace();
			System.out.println("Consulta de pedidos no efectuada correctamente");
		}
		return pedido;
	}

	public boolean eliminarUsuario(String dni) {
		boolean correcto = true;
		try {
			String sentenciaSql = "delete from usuarios where dni='" + dni + "'";
			System.out.println(sentenciaSql);
			Statement stmt = conexion.createStatement();
			stmt.execute(sentenciaSql);
			stmt.close();
		} catch (Exception e) {
			e.printStackTrace();
			System.out.println("Borrado de usuario no efectuado correctamente");
			correcto = false;
		}
		return correcto;
	}

	public boolean eliminarPedido(String dni) {
		boolean correcto = true;
		try {
			String sentenciaSql = "delete from pedidos where dni='" + dni + "'";
			System.out.println(sentenciaSql);
			Statement stmt = conexion.createStatement();
			stmt.execute(sentenciaSql);
			stmt.close();
		} catch (Exception e) {
			e.printStackTrace();
			System.out.println("Borrado de pedido no efectuado correctamente");
			correcto = false;
		}
		return correcto;
	}

	public boolean insertarUsuario(Usuario usuario) {
		boolean correcto = true;
		try {
			String sentenciaSql = "insert into usuarios(dni,nombre,primerApellido,segundoApellido,direccion,fechaNacimiento,email,usuario,clave,confClave) values ('"
					+ usuario.getDni() + "','" + usuario.getNombre() + "','" + usuario.getPrimerApellido() + "','"
					+ usuario.getSegundoApellido() + "','" + usuario.getDireccion() + "','" + usuario.getFechaNacimiento() + "','"
					+ usuario.getEmail() + "','" + usuario.getUsuario() + "','" + usuario.getClave() + "','" + usuario.getConfClave() + "')";
			System.out.println(sentenciaSql);
			Statement stmt = conexion.createStatement();
			stmt.execute(sentenciaSql);
			stmt.close();
		} catch (Exception e) {
			e.printStackTrace();
			System.out.println("Inserción de usuario no efectuada correctamente");
			correcto = false;
		}
		return correcto;
	}

	public boolean insertarPedido(Pedido pedido) {
		boolean correcto = true;
		try {
			String sentenciaSql = "insert into pedidos(dni,numPedido,detallePedido) values ('" + pedido.getDni() + "','"
					+ pedido.getNumPedido() + "','" + pedido.getDetallePedido() + ")";
			System.out.println(sentenciaSql);
			Statement stmt = conexion.createStatement();
			stmt.execute(sentenciaSql);
			stmt.close();
		} catch (Exception e) {
			e.printStackTrace();
			System.out.println("Inserción de pedido no efectuada correctamente");
			correcto = false;
		}
		return correcto;
	}

	public boolean modificarUsuario(Usuario usuario) {
		boolean correcto = true;
		try {
			String sentenciaSql = "update usuarios set " + "nombre='" + usuario.getNombre() + "', " + "primer apellido='"
					+ usuario.getPrimerApellido() + "', " + "segundo apellido=" + usuario.getSegundoApellido() + ", " + "direccion='"
					+ usuario.getDireccion() + "', " + "fecha de nacimiento=" + usuario.getFechaNacimiento() + ", " + "email='"
					+ usuario.getEmail() + "', " + "usuario=" + usuario.getUsuario() + "clave=" 
					+ usuario.getClave() +"confirmación de clave=" + usuario.getConfClave() + " where dni = '"	+ usuario.getDni() + "'";
			System.out.println(sentenciaSql);
			Statement stmt = conexion.createStatement();
			stmt.execute(sentenciaSql);
			stmt.close();
		} catch (Exception e) {
			e.printStackTrace();
			System.out.println("Modificación de usuario no efectuada correctamente");
			correcto = false;
		}
		return correcto;
	}

	public boolean modificarPedido(Pedido pedido) {
		boolean correcto = true;
		try {
			String sentenciaSql = "update pedidos set " + "DNI='" + pedido.getDni() + "', " + "NumPedido='"
					+ pedido.getNumPedido() + "', " + "DetallePedido=" + pedido.getDetallePedido() + " where dni = '"
					+ pedido.getDni() + "'";
			System.out.println(sentenciaSql);
			Statement stmt = conexion.createStatement();
			stmt.execute(sentenciaSql);
			stmt.close();
		} catch (Exception e) {
			e.printStackTrace();
			System.out.println("Modificación de pedido no efectuada correctamente");
			correcto = false;
		}
		return correcto;
	}
}
